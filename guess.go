// программа-игра для угадывания случайного числа в диапазоне от 1 до 100
package main

import (
	"bufio"
	"fmt"
	"log"
	"math/rand" //импортируем пакет math/rand. Используем полный путь импортирования для math/rand
	"os"
	"strconv"
	"strings"
	"time"
)

func main() {
	//генерируем случайное число
	seconds := time.Now().Unix() //получаем текущую дату и время в формате целого числа. Метод Unix преобразует значение Time  в целое число.
	rand.Seed(seconds)           //функция генератора случайных чисел
	target := rand.Intn(100) + 1 //вызываем функцию rand.Intn, которая генерирует целое число. Внимание: не math/rand.Intn, а rand.Intn. Прибавить 1, чтобы целое число лежало в диапазоне от 1 до 100
	fmt.Println("Я выбрал случайное число в диапазоне от 1 до 100")
	fmt.Println("Ты готов угадать это число?")
	reader := bufio.NewReader(os.Stdin)          //оздайем bufio.Reader для чтения ввода с клавиатуры
	success := false                             //объявляем переменную success для того, чтобы объявление о проигрыше не выходило в случае угадывания числа
	for guesses := 0; guesses <= 10; guesses++ { //в переменной guesses хранится количество сделанных попыток
		fmt.Println("У тебя осталось ", 10-guesses, " попыток")
		//получаем ответы от пользователя
		fmt.Print("Укажите число:")           //запрашиваем число
		input, err := reader.ReadString('\n') //прочитать данные, введенные пользователем до нажатия Enter
		if err != nil {                       //если произошла ошибка, программа выводит сообщение и завершается
			log.Fatal(err)
		}
		input = strings.TrimSpace(input)  //удаление символа новой строки \n
		guess, err := strconv.Atoi(input) //входная строка преобразуется в целое число типа int (для типа float64 используется функция ParseFloat)
		//сравниваем полученный ответ от пользователя guess с сгенерированным числом target. У пользователя 10 попыток
		if err != nil {
			log.Fatal(err)
		}
		if guess < target {
			fmt.Println("Упс, ваше число меньше задуманного")
		} else if guess > target {
			fmt.Println("Упс, ваше число больше задуманного")
		} else {
			success = true //если игрок угадал число, то выводить сообщение о проигрыше не нужно
			fmt.Println("Ты красавчик!, это действительно число ", target)
			break //команда выхода из цикла
		}
	}
	if !success { //если игрок не угадал (если переменная success содержит false), то вывести сообщение о проигрыше
		fmt.Println("К сожалению, все попытки закончились. Это было число ", target)
	}
}
