// count подсчитывает количество вхождений каждой строки в файле с использованием двух сегментов/срезов
// проще говоря, работу этой программы можно сравнить с подсчётом голосов
package main

import (
	"fmt"
	"github/headfirstgo/datafile" // импортируется пакет datafile, который сейчас включает функцию GetStrings
	"log"
)

func main() {
	lines, err := datafile.GetStrings("votes.txt") // читает файл votes.txt и возвращает сегмент, содержащий все строки из файла
	if err != nil {                                // если произошла ошибка, программа выводит сообщение и завершается
		log.Fatal(err)
	}
	var names []string // переменная для хранения сегмента с именами кандидатов
	var counts []int   // сегмент с количеством вхождений каждого имени
	// далее идёт обработка каждой строки (каждого полученного сегмента) из файла votes.txt
	for _, line := range lines {
		matched := false
		// в сегменте names ищется элемент, совпадающий с текущей строкой файла
		for i, name := range names { // перебор всех значений из сегмента names
			if name == line { // если эта строка совпадает с текущим именем...
				counts[i]++    // ...увеличивает соответсвующий счётчик
				matched = true // устанавливает признак обнаруженного совпадения
			}
		}
		if matched == false { // если совпадение не найдено...
			names = append(names, line) // ...добавить его как новое имя в сегмент...
			counts = append(counts, 1)  //...и добавить новый счетчик (текущая строка станет первым вхождением)
		}
	}
	// всё готово, остаётся вывести результаты
	for i, name := range names {
		fmt.Printf("%s: %d\n", name, counts[i]) // вывести каждый элемент из сегмента names и соответствующий элемент из сегмента counts
	}
}
